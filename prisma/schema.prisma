// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int     @id @default(autoincrement())
  email           String  @unique
  name            String
  father_lastname String
  mother_lastname String
  password        String
  status          Boolean
  images          String? @db.Text

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  UserRole   UserRole[]
  Role       Role[]
  Permission Permission[]
}

model Role {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  status Boolean

  user_id Int
  User    User @relation(fields: [user_id], references: [id])

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  deletedAt      DateTime?
  RolePermission RolePermission[]
  UserRole       UserRole[]
}

model Permission {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  status Boolean

  user_id Int
  User    User @relation(fields: [user_id], references: [id])

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  deletedAt      DateTime?
  RolePermission RolePermission[]
}

model RolePermission {
  id           Int     @id @default(autoincrement())
  roleId       Int
  permissionId Int
  status       Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role       Role       @relation(fields: [roleId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])

  @@unique([roleId, permissionId])
  @@index([roleId])
  @@index([permissionId])
}

model UserRole {
  id     Int     @id @default(autoincrement())
  userId Int
  roleId Int
  status Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId])
  @@index([userId])
  @@index([roleId])
}
